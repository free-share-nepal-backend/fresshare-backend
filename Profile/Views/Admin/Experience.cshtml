
@{
    ViewBag.Title = "Experience";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!--inline CSS-->
<style>
    textarea {
        resize: none;
    }

    #margin-top {
        margin-top: 10px;
    }
</style>

<!--on the case of Modal close-->
<script>
    $(document).ready(function () {
        $('#experienceModel').on('hidden.bs.modal', function () {
            $('#startDateId').val("");
            $('#startDateError').text("");
            $("#leaveDateId").val("");
            $("#leaveDateError").text("");
            $('#postId').val("");
            $('#postError').text("");
            $('#officeNameId').val("");
            $('#officeNameError').text("");
            $('#officeAddressId').val("");
            $('#officeAddressError').text("");
            $('#officeIntroductionId').val("");
            $('#officeIntroductionError').text("");
        });

        $("#startDateId").on('input', function () {
            $('#startDateError').text("");
        });

        $("#leaveDateId").on('input', function () {
            $('#leaveDateError').text("");
        });

        $("#postId").on('input', function () {
            $('#postError').text("");
        });

        $("#officeNameId").on('input', function () {
            $('#officeNameError').text("");
        });

        $("#officeAddressId").on('input', function () {
            $('#officeAddressError').text("");
        });

        $("#officeIntroductionId").on('input', function () {
            $('#officeIntroductionError').text("");
        });

    });
</script>

<button type="button" class="btn btn-info" onclick="addExperience();" style="margin-left:5px; ">Add</button>

<!-- Modal -->
<div class="modal fade" id="experienceModel" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="modalTitle">Add Experience</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-2">
                        @Html.Label("Start Date")
                    </div>
                    <div class="col-md-10">
                        <textarea rows="3" id="startDateId" class="form-control"></textarea>
                        <span class="text-danger" id="startDateError"></span>
                    </div>
                </div>
                <div class="row" id="margin-top">
                    <div class="col-md-2">
                        @Html.Label("Leave Date")
                    </div>
                    <div class="col-md-10">
                        <textarea rows="3" id="leaveDateId" class="form-control"></textarea>
                        <span class="text-danger" id="leaveDateError"></span>
                    </div>
                </div>
                <div class="row" id="margin-top">
                        <div class="col-md-2">
                            @Html.Label("Post")
                        </div>
                        <div class="col-md-10">
                            <textarea rows="3" id="postId" class="form-control"></textarea>
                            <span class="text-danger" id="postError"></span>
                        </div>
                    </div>
                    <div class="row" id="margin-top">
                        <div class="col-md-2">
                            @Html.Label("Office Name")
                        </div>
                        <div class="col-md-10">
                            <textarea rows="3" id="officeNameId" class="form-control"></textarea>
                            <span class="text-danger" id="officeNameError"></span>
                        </div>
                    </div>
                <div class="row" id="margin-top">
                    <div class="col-md-2">
                        @Html.Label("Office Address")
                    </div>
                    <div class="col-md-10">
                        <textarea rows="3" id="officeAddressId" class="form-control"></textarea>
                        <span class="text-danger" id="officeAddressError"></span>
                    </div>
                </div>
                    <div class="row" id="margin-top">
                        <div class="col-md-2">
                            @Html.Label("Office Introduction")
                        </div>
                        <div class="col-md-10">
                            <textarea rows="3" id="officeIntroductionId" class="form-control"></textarea>
                            <span class="text-danger" id="officeIntroductionError"></span>
                        </div>
                    </div>
                    
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="saveBtnId" onclick="saveExperience();">Save</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- Modal content-->
    </div>
</div>
<!--Modal-->

<div>
    <table id="experience" class="display">
        <thead>
            <tr>
                <th>Start Date </th>
                <th>Leave Date</th>
                <th>Post</th>
                <th>Office Name</th>
                <th>Address </th>
                <th>Office Details</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
    </table>
</div>


<script>
    var dataSource = [];

    jQuery(function ($) {
        $.ajax({
            type: 'get',
            url: '/api/Profile/Experience',
            success: function (response) {
                dataSource = response;
                $('#experience').DataTable({
                    "ajax": {
                        "url": "/api/Profile/Experience",
                        "dataSrc": ""

                    },
                    "columns": [

                        { "data": "startDate" },
                        { "data": "endDate" },
                        { "data": "post" },
                        { "data": "officeName" },
                        { "data": "address" },
                        { "data": "officeDetails" },

                         {
                             "data": "status",
                             "render": function (data, type, row, meta) {
                                 if (row.status == 0) {
                                     return '<button class="btn btn-success" onclick="previewExperience(' + row.id + ')">Show</button>'
                                 }
                                 else {
                                     return '<button class="btn btn-dark" onclick="hideExperience(' + row.id + ')">Hide<b>';
                                 }
                             }
                         },
                        {
                            "data": "null",
                            "render": function (data, type, row, meta) {
                                return '<button class="btn btn-primary" onclick="editExperience(' + row.id + ')">Edit</button><button class="btn btn-danger"onclick="deleteExperience(' + row.id + ')">Delete</button>'
                            }
                        }
                    ]
                });
            },
            error: function (response) {
            }
        });
    });

    function saveExperience() {
        var startDate = $('#startDateId').val();
        var leaveDate = $('#leaveDateId').val();
        var post = $('#postId').val();
        var officeName = $('#officeNameId').val();
        var officeAddress = $('#officeAddressId').val();
        var officeIntroduction = $('#officeIntroductionId').val();

        var result = checkValues(startDate,leaveDate,post,officeName,officeAddress,officeIntroduction);
        if (result == "fail") {
            return false;
        }

        var values = {
            StartDate: startDate,
            EndDate: leaveDate,
            Post: post,
            OfficeName: officeName,
            Address: officeAddress,
            OfficeDetails:officeIntroduction,
        };

        $.ajax({
            url: '/Experience/InsertExperience',
            type: 'post',
            data: { experienceModel: values },
            success: function (response) {
                if (response == "success") {
                    $.ajax({
                        type: 'get',
                        url: '/api/Profile/Experience',
                        success: function (response) {
                            dataSource = response;
                            toastr.success("successfully added");
                            $('#experience').DataTable().ajax.reload();
                            $('#experienceModel').modal('toggle');
                        }
                    });
                }
                else {

                }
            },
            error: function (response) {

            }

        });
    }

    function saveEditExperience(id) {
        var datas = $.grep(dataSource, function (e) {
            return e.id == id;
        });

        var startDate = $('#startDateId').val();
        var leaveDate = $('#leaveDateId').val();
        var post = $('#postId').val();
        var officeName = $('#officeNameId').val();
        var officeAddress = $('#officeAddressId').val();
        var officeIntroduction = $('#officeIntroductionId').val();


        if (startDate == datas[0].startDate && leaveDate == datas[0].leaveDate && post==datas[0].post &&
            officeName == datas[0].officeName && officeAddress == datas[0].address && officeIntroduction == datas[0].officeIntroduction)
        {
            $('#experienceModel').modal('toggle');
            return false;
        }

        var result = checkValues(startDate, leaveDate, post, officeName, officeAddress, officeIntroduction);
        if (result == "fail") {
            return false;
        }

        var values = {
            Id:id,
            StartDate: startDate,
            EndDate: leaveDate,
            Post: post,
            OfficeName: officeName,
            Address: officeAddress,
            OfficeDetails: officeIntroduction,
        };
        $.ajax({
            type: 'put',
            url: '/Experience/UpdateExperience',
            data: { experienceModel: values },
            success: function (response) {
                if (response == "success") {
                    $.ajax({
                        type: 'get',
                        url: '/api/Profile/Experience',
                        success: function (response) {
                            dataSource = response;
                            toastr.success("successfully updated");
                            $('#experience').DataTable().ajax.reload();
                            $('#experienceModel').modal('toggle');
                        }
                    });
                }
            },
            error: function (response) {
                alert(response);
            }

        });
    }

    function editExperience(id) {
        $('#experienceModel').modal('toggle');
        $("#modalTitle").text("Edit Experience");

        var datas = $.grep(dataSource, function (e) {
            return e.id == id;
        });

        $('#startDateId').val(datas[0].startDate);
        $('#leaveDateId').val(datas[0].endDate);
        $('#postId').val(datas[0].post);
        $('#officeNameId').val(datas[0].officeName);
        $('#officeAddressId').val(datas[0].address);
        $('#officeIntroductionId').val(datas[0].officeDetails);
        var functionName = "saveEditExperience(" + id + ")";
        $("#saveBtnId").attr("onclick", functionName);
    }

    function deleteExperience(id) {
        bootbox.confirm("Are you sure?", function (result) {
            if (result) {
                $.ajax({
                    url: '/Experience/DeleteExperience',
                    type: 'delete',
                    data: { id: id },
                    success: function (response) {
                        if (response == "success") {
                            $.ajax({
                                type: 'get',
                                url: '/api/Profile/Experience',
                                success: function (response) {
                                    dataSource = response;
                                    toastr.success("successfully deleted");
                                    $('#experience').DataTable().ajax.reload();
                                }
                            });
                        }
                        else {
                            toastr.error("cannot delete the active one");
                        }
                    },
                    error: function (response) {
                        alert(response);
                    }

                });
            }
        });
    }

    //call to hide or Preview the skill
    function previewExperience(id) {
        $.ajax({
            type: 'put',
            url: '/Experience/PreviewExperience',
            data: { id: id },
            success: function (response) {
                if (response == "success") {
                    toastr.success("successfully activated");
                    $('#experience').DataTable().ajax.reload();
                }
            },
            error: function (response) {
                alert("error");
            }

        });
    }

    function hideExperience(id) {
        $.ajax({
            type: 'put',
            url: '/Experience/HideExperience',
            data: { id: id },
            success: function (response) {
                if (response == "success") {
                    toastr.warning("successfully deactivated");
                    $('#experience').DataTable().ajax.reload();
                }
            },
            error: function (response) {
                alert("error");
            }

        });
    }

    function addExperience() {
        var functionName = "saveExperience()";
        $("#saveBtnId").attr("onclick", functionName);
        $("#modalTitle").text("Add Experience");
        $('#experienceModel').modal('toggle');
    }

    function checkValues(startDate, leaveDate, post, officeName, officeAddress, officeIntroduction) {

        var checkStartDate = 0;
        var checkLeaveDate = 0;
        var checkPost = 0;
        var checkOfficeName = 0;
        var checkOfficeAddress = 0;
        var checkOfficeIntroduction = 0;

        if (startDate == "") {
            checkStartDate = 1;
            $('#startDateError').text("Required");
        }
        if (leaveDate == "") {
            checkLeaveDate = 1;
            $("#leaveDateError").text("Required");
        }
        if (post == "") {
            checkPost = 1;
            $("#postError").text("Required");
        }
        if (officeName == "") {
            checkOfficeName = 1;
            $("#officeNameError").text("Required");
        }
        if (officeAddress == "") {
            checkOfficeAddress = 1;
            $("#officeAddressError").text("Required");
        }
        if (officeIntroduction == "") {
            checkOfficeIntroduction = 1;
            $("#officeIntroductionError").text("Required");
        }
        return true;
    }

</script>

